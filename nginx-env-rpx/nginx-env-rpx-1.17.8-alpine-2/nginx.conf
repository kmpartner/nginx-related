# user  nginx;
# worker_processes  1;

# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    server {
        listen       80;
        location / {
            # access_log off;
            # return 200 '${MESSAGE}';
            # add_header Content-Type text/plain;

            proxy_pass          http://nodes;

            # # enable WebSockets
            # proxy_http_version 1.1;
            # # proxy_set_header Upgrade $http_upgrade;
            # pr
        }
    }

    server {
        listen       443 ssl;

        # # enable to send more than default size
        # client_max_body_size 5000M;
        client_max_body_size ${MAX_BODY_SIZE};
        
        ssl_certificate           /etc/nginx/cert.crt;
        ssl_certificate_key       /etc/nginx/cert.key;

        # ssl on;
        ssl_session_cache  builtin:1000  shared:SSL:10m;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers on;

        location / {
            # access_log off;
            # return 200 '${MESSAGE}';
            # add_header Content-Type text/plain;

            proxy_pass          http://nodes;

            # # enable WebSockets
            # proxy_http_version 1.1;
            # # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
        }
    }

    upstream nodes {
    # # enable sticky session
    # ip_hash;

    # server socket-rtc;
    # server hello-kubernetes-second:80;
    # server 172.17.0.2:80;
    server ${API_HOST};

    # server server-john;
    # server server-paul;

    }

}
